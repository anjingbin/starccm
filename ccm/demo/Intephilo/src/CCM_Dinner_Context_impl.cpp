// **********************************************************************
//
// Generated by the CIDL Translator
//
// Copyright (c) 2001-2004
// StarMiddleware Group
// www.StarMiddleware.net
//
// All Rights Reserved
//
// Author: Huang Jie        huangjie@email.com
// Author: Chang Junsheng   cjs7908@163.com
// Author: Zhen Xianrong
//
// **********************************************************************


#include <CORBA.h>
#include <CosNotification.h>
#include <EnterpriseComponent_impl.h>
#include <CCM_Dinner_Context_impl.h>

Dinner::CCM_Philosopher_Context_impl::CCM_Philosopher_Context_impl(Dinner::Philosopher_impl* servent, Components::CCM2Context_ptr ctx)
      :servent_(servent), Components::Session2Context_impl(ctx)
{
}

Dinner::CCM_Philosopher_Context_impl::~CCM_Philosopher_Context_impl()
{
}

::Dinner::Fork_ptr
Dinner::CCM_Philosopher_Context_impl::get_connection_left_hand()
          throw(CORBA::SystemException)
{
    Components::ConnectionDescriptions_var connectionDescriptions 
    = servent_ -> get_connections("left_hand");

    if(connectionDescriptions -> length() == 1)
    {
        CORBA::Object_ptr obj = connectionDescriptions -> operator[](0) -> objref();
        ::Dinner::Fork_var aFork = ::Dinner::Fork::_narrow(obj);

        return aFork._retn();
    }
    return ::Dinner::Fork::_nil();
}

::Dinner::Fork_ptr
Dinner::CCM_Philosopher_Context_impl::get_connection_right_hand()
          throw(CORBA::SystemException)
{
    Components::ConnectionDescriptions_var connectionDescriptions 
    = servent_ -> get_connections("right_hand");

    if(connectionDescriptions -> length() == 1)
    {
        CORBA::Object_ptr obj = connectionDescriptions -> operator[](0) -> objref();
        ::Dinner::Fork_var aFork = ::Dinner::Fork::_narrow(obj);

        return aFork._retn();
    }
    return ::Dinner::Fork::_nil();
}

::Dinner::Observing_ptr
Dinner::CCM_Philosopher_Context_impl::get_connection_observer()
          throw(CORBA::SystemException)
{
    Components::ConnectionDescriptions_var connectionDescriptions 
    = servent_ -> get_connections("observer");

    if(connectionDescriptions -> length() == 1)
    {
        CORBA::Object_ptr obj = connectionDescriptions -> operator[](0) -> objref();
        ::Dinner::Observing_var aObserving = ::Dinner::Observing::_narrow(obj);

        return aObserving._retn();
    }
    return ::Dinner::Observing::_nil();
}

Components::ComponentServentBase*
Dinner::CCM_Philosopher_Context_impl::getServant()
{
	return servent_;
}

CORBA::ORB_ptr
Dinner::CCM_Philosopher_Context_impl::getORB()
{
	  Container::CIFHook_var cif = servent_ -> getCIFHook();
      CORBA::ORB_var orb = cif -> getOrb();
      
      return orb._retn();
}

Dinner::CCM_Cutlery_Context_impl::CCM_Cutlery_Context_impl(Dinner::Cutlery_impl* servent, Components::CCM2Context_ptr ctx)
      :servent_(servent), Components::Session2Context_impl(ctx)
{
}

Dinner::CCM_Cutlery_Context_impl::~CCM_Cutlery_Context_impl()
{
}
