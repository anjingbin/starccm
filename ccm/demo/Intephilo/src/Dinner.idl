// **********************************************************************
//
// Generated by the IDL3 Translator
//
// Copyright (c) 2001-2004
// StarMiddleware Group
// www.StarMiddleware.net
//
// All Rights Reserved
//
// Author: Huang Jie        huangjie@email.com
// Author: Chang Junsheng   cjs7908@163.com
// Author: Zhen Xianrong
//
// **********************************************************************


#ifndef ___Dinner_idl__
#define ___Dinner_idl__

#include <Components.idl>
#include <Observing.idl>

module Dinner
{
    interface Fork;
    interface Named;
    interface Philosopher;
    interface Cutlery;
}; // End of module Dinner

module Dinner
{
    exception ForkNotAvailable
    {
    };

    exception NotTheEater
    {
    };

    interface Fork
    {
        ::Components::Cookie obtain_fork()
            raises(::Dinner::ForkNotAvailable);
        void release_fork(in ::Components::Cookie ck)
            raises(::Dinner::NotTheEater);
    };

    interface Named
    {
        attribute string name;
    };

    //Component

    interface Philosopher: ::Dinner::Named,
    ::Components::CCMObject
    {
        attribute unsigned long thinking_seconds;
        attribute unsigned long eating_seconds;
        attribute unsigned long sleeping_seconds;
        //Uses
        void connect_left_hand (in ::Dinner::Fork conn )
            raises (::Components::AlreadyConnected,
                    ::Components::InvalidConnection);
        ::Dinner::Fork disconnect_left_hand()
            raises (::Components::NoConnection );
        ::Dinner::Fork get_connection_left_hand();

        //Uses
        void connect_right_hand (in ::Dinner::Fork conn )
            raises (::Components::AlreadyConnected,
                    ::Components::InvalidConnection);
        ::Dinner::Fork disconnect_right_hand()
            raises (::Components::NoConnection );
        ::Dinner::Fork get_connection_right_hand();

        //Uses
        void connect_observer (in ::Dinner::Observing conn )
            raises (::Components::AlreadyConnected,
                    ::Components::InvalidConnection);
        ::Dinner::Observing disconnect_observer()
            raises (::Components::NoConnection );
        ::Dinner::Observing get_connection_observer();

    };

    //Component

    interface Cutlery: ::Components::CCMObject
    {
        Fork provide_the_fork();

    };

    //Home

    interface PhilosopherHomeExplicit: ::Components::HomeConfiguration
    {
    };

    interface PhilosopherHomeImplicit: ::Components::KeylessCCMHome 
    {
        ::Dinner::Philosopher create()
            raises(::Components::CreateFailure);
    };

    interface PhilosopherHome:PhilosopherHomeExplicit, 
                              PhilosopherHomeImplicit
    {
    };

    //Home

    interface CutleryHomeExplicit: ::Components::HomeConfiguration
    {
    };

    interface CutleryHomeImplicit: ::Components::KeylessCCMHome 
    {
        ::Dinner::Cutlery create()
            raises(::Components::CreateFailure);
    };

    interface CutleryHome:CutleryHomeExplicit, 
                          CutleryHomeImplicit
    {
    };

}; // End of module Dinner


#endif
