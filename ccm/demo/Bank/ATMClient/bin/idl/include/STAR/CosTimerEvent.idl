// **********************************************************************
//
// Copyright (c) 2000
// Network Information Security Institute,Computer College,NUDT.
// ChangSha,Hunan,PRC
//
// All Rights Reserved
//
// **********************************************************************

#ifndef COS_TIMER_EVENT_IDL
#define COS_TIMER_EVENT_IDL

#pragma prefix "omg.org"

#include <CosTime.idl>
#include <CosEventComm.idl>

module CosTimerEvent
{
    enum TimeType { TTAbsolute, TTRelative, TTPeriodic };
    enum EventStatus { ESTimeSet, ESTimeCleared, ESTriggered, ESFailedTrigger };

    struct TimerEventT
    {
	TimeBase::UtcT utc;
	any event_data;
    };

    interface TimerEventHandler
    {
	readonly attribute EventStatus status;
	boolean time_set(out CosTime::UTO uto);
	void set_timer(in TimeType time_type, in CosTime::UTO trigger_time);
	boolean cancel_timer();
	void set_data(in any event_data);
    };

    interface TimerEventService
    {
	CosTime::UTO event_time(in TimerEventT timer_event);
	TimerEventHandler register(in CosEventComm::PushConsumer event_interface, in any data);
	void unregister(in TimerEventHandler timer_event_handler);
	
    };
};

#endif
