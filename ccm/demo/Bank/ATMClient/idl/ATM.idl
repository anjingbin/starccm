// **********************************************************************
//
// Generated by the IDL3 Translator
//
// Copyright (c) 2001-2004
// StarMiddleware Group
// www.StarMiddleware.net
//
// All Rights Reserved
//
// Author: Huang Jie        huangjie@email.com
// Author: Chang Junsheng   cjs7908@163.com
// Author: Zhen Xianrong
//
// **********************************************************************


#ifndef ___ATM_idl__
#define ___ATM_idl__

#include <ComponentsClient.idl>
#include <DepositComp.idl>
#include <WithdrawComp.idl>
#include <QueryComp.idl>
#include <Authentication.idl>

module Bank
{
    interface ATMOp;
    interface ATM;
}; // End of module Bank

module Bank
{
    //Component
    //Home
    //Component
    //Home
    //Component
    //Home
    //Component
    //Home
    //Component
    //Home
    //Component
    //Home
    interface ATMOp
    {
        unsigned long getBalance(in string id);
        void deposit(in string id,
                     in unsigned long amount);
        unsigned long withdraw(in string id,
                               in unsigned long amount);
        void transfer(in string fromId,
                      in string toId,
                      in unsigned long amount);
        void changePassword(in string id,
                            in string newPassword);
    };

    //Component

    interface ATM: ::Components::CCMObject
    {
        ATMOp provide_ATM_op();

        //Uses
        void connect_deposit (in ::Bank::DepositOp conn )
            raises (::Components::AlreadyConnected,
                    ::Components::InvalidConnection);
        ::Bank::DepositOp disconnect_deposit()
            raises (::Components::NoConnection );
        ::Bank::DepositOp get_connection_deposit();

        //Uses
        void connect_withdraw (in ::Bank::WithdrawOp conn )
            raises (::Components::AlreadyConnected,
                    ::Components::InvalidConnection);
        ::Bank::WithdrawOp disconnect_withdraw()
            raises (::Components::NoConnection );
        ::Bank::WithdrawOp get_connection_withdraw();

        //Uses
        void connect_query (in ::Bank::QueryOp conn )
            raises (::Components::AlreadyConnected,
                    ::Components::InvalidConnection);
        ::Bank::QueryOp disconnect_query()
            raises (::Components::NoConnection );
        ::Bank::QueryOp get_connection_query();

        //Uses
        void connect_authenticator (in ::Bank::AuthenticationOp conn )
            raises (::Components::AlreadyConnected,
                    ::Components::InvalidConnection);
        ::Bank::AuthenticationOp disconnect_authenticator()
            raises (::Components::NoConnection );
        ::Bank::AuthenticationOp get_connection_authenticator();

    };

    //Home

    interface ATMHomeExplicit: ::Components::HomeConfiguration
    {
    };

    interface ATMHomeImplicit: ::Components::KeylessCCMHome 
    {
        ::Bank::ATM create()
            raises(::Components::CreateFailure);
    };

    interface ATMHome:ATMHomeExplicit, 
                      ATMHomeImplicit
    {
    };

}; // End of module Bank


#endif
