// **********************************************************************
//
// This File Is Automatically Generated by the InterBus IDL-to-Java Compiler !
//
// Copyright (c) 2003
// Intervision Software Co., Ltd.
// Haidian District, Beijing.
//
// All Rights Reserved
//
// **********************************************************************

// Version: 5.0a

package bank.Components;

//
// IDL:omg.org/Components/CCMObject:1.0
//
public class _CCMObjectStub extends org.omg.CORBA.portable.ObjectImpl
                            implements CCMObject
{
    private static final String[] _star_ids_ =
    {
        "IDL:omg.org/Components/CCMObject:1.0",
        "IDL:omg.org/Components/Navigation:1.0",
        "IDL:omg.org/Components/Receptacles:1.0",
        "IDL:omg.org/Components/Events:1.0"
    };

    public String[]
    _ids()
    {
        return _star_ids_;
    }

    final public static java.lang.Class _star_opsClass = CCMObjectOperations.class;

    //
    // IDL:omg.org/Components/CCMObject/get_component_def:1.0
    //
    public bank.CORBA.IRObject
    get_component_def()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_component_def", true);
                    in = _invoke(out);
                    bank.CORBA.IRObject _star_r = bank.CORBA.IRObjectHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_component_def", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    return _star_self.get_component_def();
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/CCMObject/get_ccm_home:1.0
    //
    public CCMHome
    get_ccm_home()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_ccm_home", true);
                    in = _invoke(out);
                    CCMHome _star_r = CCMHomeHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_ccm_home", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    return _star_self.get_ccm_home();
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/CCMObject/get_primary_key:1.0
    //
    public PrimaryKeyBase
    get_primary_key()
        throws NoKeyAvailable
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_primary_key", true);
                    in = _invoke(out);
                    PrimaryKeyBase _star_r = PrimaryKeyBaseHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(NoKeyAvailableHelper.id()))
                        throw NoKeyAvailableHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_primary_key", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    PrimaryKeyBase _star_r = _star_self.get_primary_key();
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    PrimaryKeyBaseHelper.write(_star_out, _star_r);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    _star_r = PrimaryKeyBaseHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/CCMObject/configuration_complete:1.0
    //
    public void
    configuration_complete()
        throws InvalidConfiguration
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("configuration_complete", true);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidConfigurationHelper.id()))
                        throw InvalidConfigurationHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("configuration_complete", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    _star_self.configuration_complete();
                    return;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/CCMObject/remove:1.0
    //
    public void
    remove()
        throws RemoveFailure
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("remove", true);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(RemoveFailureHelper.id()))
                        throw RemoveFailureHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("remove", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    _star_self.remove();
                    return;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/CCMObject/get_all_ports:1.0
    //
    public ComponentPortDescription
    get_all_ports()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_all_ports", true);
                    in = _invoke(out);
                    ComponentPortDescription _star_r = ComponentPortDescriptionHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_all_ports", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    ComponentPortDescription _star_r = _star_self.get_all_ports();
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    ComponentPortDescriptionHelper.write(_star_out, _star_r);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    _star_r = ComponentPortDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Navigation/provide_facet:1.0
    //
    public org.omg.CORBA.Object
    provide_facet(String _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("provide_facet", true);
                    FeatureNameHelper.write(out, _star_a0);
                    in = _invoke(out);
                    org.omg.CORBA.Object _star_r = in.read_Object();
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("provide_facet", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    return _star_self.provide_facet(_star_a0);
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Navigation/get_all_facets:1.0
    //
    public FacetDescription[]
    get_all_facets()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_all_facets", true);
                    in = _invoke(out);
                    FacetDescription[] _star_r = FacetDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_all_facets", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    FacetDescription[] _star_r = _star_self.get_all_facets();
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        FacetDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new FacetDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = FacetDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Navigation/get_named_facets:1.0
    //
    public FacetDescription[]
    get_named_facets(String[] _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_named_facets", true);
                    NameListHelper.write(out, _star_a0);
                    in = _invoke(out);
                    FacetDescription[] _star_r = FacetDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_named_facets", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    FacetDescription[] _star_r = _star_self.get_named_facets(_star_a0);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        FacetDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new FacetDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = FacetDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Navigation/same_component:1.0
    //
    public boolean
    same_component(org.omg.CORBA.Object _star_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("same_component", true);
                    out.write_Object(_star_a0);
                    in = _invoke(out);
                    boolean _star_r = in.read_boolean();
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("same_component", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    return _star_self.same_component(_star_a0);
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/connect:1.0
    //
    public Cookie
    connect(String _star_a0,
            org.omg.CORBA.Object _star_a1)
        throws InvalidName,
               InvalidConnection,
               AlreadyConnected,
               ExceededConnectionLimit
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("connect", true);
                    FeatureNameHelper.write(out, _star_a0);
                    out.write_Object(_star_a1);
                    in = _invoke(out);
                    Cookie _star_r = CookieHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    if(_star_id.equals(InvalidConnectionHelper.id()))
                        throw InvalidConnectionHelper.read(in);
                    if(_star_id.equals(AlreadyConnectedHelper.id()))
                        throw AlreadyConnectedHelper.read(in);
                    if(_star_id.equals(ExceededConnectionLimitHelper.id()))
                        throw ExceededConnectionLimitHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("connect", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    Cookie _star_r = _star_self.connect(_star_a0, _star_a1);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    CookieHelper.write(_star_out, _star_r);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    _star_r = CookieHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/disconnect:1.0
    //
    public void
    disconnect(String _star_a0,
               Cookie _star_a1)
        throws InvalidName,
               InvalidConnection,
               CookieRequired,
               NoConnection
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("disconnect", true);
                    FeatureNameHelper.write(out, _star_a0);
                    CookieHelper.write(out, _star_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    if(_star_id.equals(InvalidConnectionHelper.id()))
                        throw InvalidConnectionHelper.read(in);
                    if(_star_id.equals(CookieRequiredHelper.id()))
                        throw CookieRequiredHelper.read(in);
                    if(_star_id.equals(NoConnectionHelper.id()))
                        throw NoConnectionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("disconnect", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    CookieHelper.write(_star_out, _star_a1);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    _star_a1 = CookieHelper.read(_star_in);
                    _star_self.disconnect(_star_a0, _star_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/get_connections:1.0
    //
    public ConnectionDescription[]
    get_connections(String _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_connections", true);
                    FeatureNameHelper.write(out, _star_a0);
                    in = _invoke(out);
                    ConnectionDescription[] _star_r = ConnectionDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_connections", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    ConnectionDescription[] _star_r = _star_self.get_connections(_star_a0);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ConnectionDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new ConnectionDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = ConnectionDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/get_all_receptacles:1.0
    //
    public ReceptacleDescription[]
    get_all_receptacles()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_all_receptacles", true);
                    in = _invoke(out);
                    ReceptacleDescription[] _star_r = ReceptacleDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_all_receptacles", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    ReceptacleDescription[] _star_r = _star_self.get_all_receptacles();
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ReceptacleDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new ReceptacleDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = ReceptacleDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/get_named_receptacles:1.0
    //
    public ReceptacleDescription[]
    get_named_receptacles(String[] _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_named_receptacles", true);
                    NameListHelper.write(out, _star_a0);
                    in = _invoke(out);
                    ReceptacleDescription[] _star_r = ReceptacleDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_named_receptacles", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    ReceptacleDescription[] _star_r = _star_self.get_named_receptacles(_star_a0);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ReceptacleDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new ReceptacleDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = ReceptacleDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/get_consumer:1.0
    //
    public EventConsumerBase
    get_consumer(String _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_consumer", true);
                    FeatureNameHelper.write(out, _star_a0);
                    in = _invoke(out);
                    EventConsumerBase _star_r = EventConsumerBaseHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_consumer", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    return _star_self.get_consumer(_star_a0);
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/subscribe:1.0
    //
    public Cookie
    subscribe(String _star_a0,
              EventConsumerBase _star_a1)
        throws InvalidName,
               InvalidConnection,
               ExceededConnectionLimit
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("subscribe", true);
                    FeatureNameHelper.write(out, _star_a0);
                    EventConsumerBaseHelper.write(out, _star_a1);
                    in = _invoke(out);
                    Cookie _star_r = CookieHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    if(_star_id.equals(InvalidConnectionHelper.id()))
                        throw InvalidConnectionHelper.read(in);
                    if(_star_id.equals(ExceededConnectionLimitHelper.id()))
                        throw ExceededConnectionLimitHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("subscribe", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    Cookie _star_r = _star_self.subscribe(_star_a0, _star_a1);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    CookieHelper.write(_star_out, _star_r);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    _star_r = CookieHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/unsubscribe:1.0
    //
    public void
    unsubscribe(String _star_a0,
                Cookie _star_a1)
        throws InvalidName,
               InvalidConnection
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("unsubscribe", true);
                    FeatureNameHelper.write(out, _star_a0);
                    CookieHelper.write(out, _star_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    if(_star_id.equals(InvalidConnectionHelper.id()))
                        throw InvalidConnectionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("unsubscribe", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    CookieHelper.write(_star_out, _star_a1);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    _star_a1 = CookieHelper.read(_star_in);
                    _star_self.unsubscribe(_star_a0, _star_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/connect_consumer:1.0
    //
    public void
    connect_consumer(String _star_a0,
                     EventConsumerBase _star_a1)
        throws InvalidName,
               AlreadyConnected,
               InvalidConnection
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("connect_consumer", true);
                    FeatureNameHelper.write(out, _star_a0);
                    EventConsumerBaseHelper.write(out, _star_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    if(_star_id.equals(AlreadyConnectedHelper.id()))
                        throw AlreadyConnectedHelper.read(in);
                    if(_star_id.equals(InvalidConnectionHelper.id()))
                        throw InvalidConnectionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("connect_consumer", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    _star_self.connect_consumer(_star_a0, _star_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/disconnect_consumer:1.0
    //
    public EventConsumerBase
    disconnect_consumer(String _star_a0)
        throws InvalidName,
               NoConnection
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("disconnect_consumer", true);
                    FeatureNameHelper.write(out, _star_a0);
                    in = _invoke(out);
                    EventConsumerBase _star_r = EventConsumerBaseHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    if(_star_id.equals(NoConnectionHelper.id()))
                        throw NoConnectionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("disconnect_consumer", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    return _star_self.disconnect_consumer(_star_a0);
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/get_all_consumers:1.0
    //
    public ConsumerDescription[]
    get_all_consumers()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_all_consumers", true);
                    in = _invoke(out);
                    ConsumerDescription[] _star_r = ConsumerDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_all_consumers", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    ConsumerDescription[] _star_r = _star_self.get_all_consumers();
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ConsumerDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new ConsumerDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = ConsumerDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/get_named_consumers:1.0
    //
    public ConsumerDescription[]
    get_named_consumers(String[] _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_named_consumers", true);
                    NameListHelper.write(out, _star_a0);
                    in = _invoke(out);
                    ConsumerDescription[] _star_r = ConsumerDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_named_consumers", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    ConsumerDescription[] _star_r = _star_self.get_named_consumers(_star_a0);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ConsumerDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new ConsumerDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = ConsumerDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/get_all_emitters:1.0
    //
    public EmitterDescription[]
    get_all_emitters()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_all_emitters", true);
                    in = _invoke(out);
                    EmitterDescription[] _star_r = EmitterDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_all_emitters", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    EmitterDescription[] _star_r = _star_self.get_all_emitters();
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        EmitterDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new EmitterDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = EmitterDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/get_named_emitters:1.0
    //
    public EmitterDescription[]
    get_named_emitters(String[] _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_named_emitters", true);
                    NameListHelper.write(out, _star_a0);
                    in = _invoke(out);
                    EmitterDescription[] _star_r = EmitterDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_named_emitters", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    EmitterDescription[] _star_r = _star_self.get_named_emitters(_star_a0);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        EmitterDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new EmitterDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = EmitterDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/get_all_publishers:1.0
    //
    public PublisherDescription[]
    get_all_publishers()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_all_publishers", true);
                    in = _invoke(out);
                    PublisherDescription[] _star_r = PublisherDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_all_publishers", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    PublisherDescription[] _star_r = _star_self.get_all_publishers();
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        PublisherDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new PublisherDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = PublisherDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Events/get_named_publishers:1.0
    //
    public PublisherDescription[]
    get_named_publishers(String[] _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_named_publishers", true);
                    NameListHelper.write(out, _star_a0);
                    in = _invoke(out);
                    PublisherDescription[] _star_r = PublisherDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_named_publishers", _star_opsClass);
                if(_star_so == null)
                    continue;
                CCMObjectOperations _star_self = (CCMObjectOperations)_star_so.servant;
                try
                {
                    PublisherDescription[] _star_r = _star_self.get_named_publishers(_star_a0);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        PublisherDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new PublisherDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = PublisherDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }
}
