// **********************************************************************
//
// This File Is Automatically Generated by the InterBus IDL-to-Java Compiler !
//
// Copyright (c) 2003
// Intervision Software Co., Ltd.
// Haidian District, Beijing.
//
// All Rights Reserved
//
// **********************************************************************

// Version: 5.0a

package bank.Components;

//
// IDL:omg.org/Components/Receptacles:1.0
//
public class _ReceptaclesStub extends org.omg.CORBA.portable.ObjectImpl
                              implements Receptacles
{
    private static final String[] _star_ids_ =
    {
        "IDL:omg.org/Components/Receptacles:1.0",
    };

    public String[]
    _ids()
    {
        return _star_ids_;
    }

    final public static java.lang.Class _star_opsClass = ReceptaclesOperations.class;

    //
    // IDL:omg.org/Components/Receptacles/connect:1.0
    //
    public Cookie
    connect(String _star_a0,
            org.omg.CORBA.Object _star_a1)
        throws InvalidName,
               InvalidConnection,
               AlreadyConnected,
               ExceededConnectionLimit
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("connect", true);
                    FeatureNameHelper.write(out, _star_a0);
                    out.write_Object(_star_a1);
                    in = _invoke(out);
                    Cookie _star_r = CookieHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    if(_star_id.equals(InvalidConnectionHelper.id()))
                        throw InvalidConnectionHelper.read(in);
                    if(_star_id.equals(AlreadyConnectedHelper.id()))
                        throw AlreadyConnectedHelper.read(in);
                    if(_star_id.equals(ExceededConnectionLimitHelper.id()))
                        throw ExceededConnectionLimitHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("connect", _star_opsClass);
                if(_star_so == null)
                    continue;
                ReceptaclesOperations _star_self = (ReceptaclesOperations)_star_so.servant;
                try
                {
                    Cookie _star_r = _star_self.connect(_star_a0, _star_a1);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    CookieHelper.write(_star_out, _star_r);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    _star_r = CookieHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/disconnect:1.0
    //
    public void
    disconnect(String _star_a0,
               Cookie _star_a1)
        throws InvalidName,
               InvalidConnection,
               CookieRequired,
               NoConnection
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("disconnect", true);
                    FeatureNameHelper.write(out, _star_a0);
                    CookieHelper.write(out, _star_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    if(_star_id.equals(InvalidConnectionHelper.id()))
                        throw InvalidConnectionHelper.read(in);
                    if(_star_id.equals(CookieRequiredHelper.id()))
                        throw CookieRequiredHelper.read(in);
                    if(_star_id.equals(NoConnectionHelper.id()))
                        throw NoConnectionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("disconnect", _star_opsClass);
                if(_star_so == null)
                    continue;
                ReceptaclesOperations _star_self = (ReceptaclesOperations)_star_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    CookieHelper.write(_star_out, _star_a1);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    _star_a1 = CookieHelper.read(_star_in);
                    _star_self.disconnect(_star_a0, _star_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/get_connections:1.0
    //
    public ConnectionDescription[]
    get_connections(String _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_connections", true);
                    FeatureNameHelper.write(out, _star_a0);
                    in = _invoke(out);
                    ConnectionDescription[] _star_r = ConnectionDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_connections", _star_opsClass);
                if(_star_so == null)
                    continue;
                ReceptaclesOperations _star_self = (ReceptaclesOperations)_star_so.servant;
                try
                {
                    ConnectionDescription[] _star_r = _star_self.get_connections(_star_a0);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ConnectionDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new ConnectionDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = ConnectionDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/get_all_receptacles:1.0
    //
    public ReceptacleDescription[]
    get_all_receptacles()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_all_receptacles", true);
                    in = _invoke(out);
                    ReceptacleDescription[] _star_r = ReceptacleDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_all_receptacles", _star_opsClass);
                if(_star_so == null)
                    continue;
                ReceptaclesOperations _star_self = (ReceptaclesOperations)_star_so.servant;
                try
                {
                    ReceptacleDescription[] _star_r = _star_self.get_all_receptacles();
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ReceptacleDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new ReceptacleDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = ReceptacleDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }

    //
    // IDL:omg.org/Components/Receptacles/get_named_receptacles:1.0
    //
    public ReceptacleDescription[]
    get_named_receptacles(String[] _star_a0)
        throws InvalidName
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_named_receptacles", true);
                    NameListHelper.write(out, _star_a0);
                    in = _invoke(out);
                    ReceptacleDescription[] _star_r = ReceptacleDescriptionsHelper.read(in);
                    return _star_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _star_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _star_aex)
                {
                    final String _star_id = _star_aex.getId();
                    in = _star_aex.getInputStream();

                    if(_star_id.equals(InvalidNameHelper.id()))
                        throw InvalidNameHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _star_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _star_so = _servant_preinvoke("get_named_receptacles", _star_opsClass);
                if(_star_so == null)
                    continue;
                ReceptaclesOperations _star_self = (ReceptaclesOperations)_star_so.servant;
                try
                {
                    ReceptacleDescription[] _star_r = _star_self.get_named_receptacles(_star_a0);
                    org.omg.CORBA.portable.OutputStream _star_out = _orb().create_output_stream();
                    int len0 = _star_r.length;
                    _star_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ReceptacleDescriptionHelper.write(_star_out, _star_r[i0]);
                    org.omg.CORBA.portable.InputStream _star_in = _star_out.create_input_stream();
                    int len1 = _star_in.read_ulong();
                    _star_r = new ReceptacleDescription[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _star_r[i1] = ReceptacleDescriptionHelper.read(_star_in);
                    return _star_r;
                }
                finally
                {
                    _servant_postinvoke(_star_so);
                }
            }
        }
    }
}
