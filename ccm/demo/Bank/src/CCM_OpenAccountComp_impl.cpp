// **********************************************************************
//
// Generated by the CIDL Translator
//
// Copyright (c) 2001-2004
// StarMiddleware Group
// www.StarMiddleware.net
//
// All Rights Reserved
//
// Author: Huang Jie        huangjie@email.com
// Author: Chang Junsheng   cjs7908@163.com
// Author: Zhen Xianrong
//
// **********************************************************************

#include <CORBA.h>
#include <CCM_OpenAccountComp_impl.h>
#include <CommonFunc.h>
#include <string>

#ifdef HAVE_STD_IOSTREAM
using namespace std;
#endif

Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::CCM_OpenAccountComp_impl():database_( NULL )
{
}

Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::~CCM_OpenAccountComp_impl()
{
}

void
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::configuration_complete()
	throw (Components::InvalidConfiguration, CORBA::SystemException)
{
}

void
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::enter_dyn_deploy()
	throw(CORBA::SystemException)
{
}

void
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::leave_dyn_deploy()
	throw(CORBA::SystemException)
{
}

void
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::set_session_context(Components::SessionContext* ctx)
    throw(Components::CCMException,
          CORBA::SystemException)
{
    #ifdef TAO
    ctx_ = Bank::CCM_OpenAccountComp_Context::_duplicate(dynamic_cast<Bank::CCM_OpenAccountComp_Context*>(ctx));
    #else
    ctx_ = Bank::CCM_OpenAccountComp_Context::_narrow(ctx);
    #endif
}

void
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::ccm_activate()
    throw(Components::CCMException,
          CORBA::SystemException)
{
}

void
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::ccm_passivate()
    throw(Components::CCMException,
          CORBA::SystemException)
{
}

void
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::ccm_remove()
    throw(Components::CCMException,
          CORBA::SystemException)
{
	if( database_ != NULL)
	{
		PQfinish(database_);
		database_ = NULL;
	}
}


void
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::openAccount(const char* id,
                                                                        const char* password)
    throw(CORBA::SystemException)
{
    if( database_ == NULL)
	{
		connect_database();
	}    

	
	string query = "insert into account values( \'";
	query += id;
	query += "\',\'";
	query += password;
	query += "\',";
	query += "0)";
	
	PGresult * result = PQexec(database_,query.c_str());

	if( PQresultStatus(result) != PGRES_COMMAND_OK)
	{
		PQclear(result);
		throw CORBA::PERSIST_STORE();
	}

}

Bank::OpenAccountCompComposition::CCM_OpenAccountCompHome_impl::CCM_OpenAccountCompHome_impl()
{
}

Bank::OpenAccountCompComposition::CCM_OpenAccountCompHome_impl::~CCM_OpenAccountCompHome_impl()
{
}

Components::EnterpriseComponent_ptr
Bank::OpenAccountCompComposition::CCM_OpenAccountCompHome_impl::create()
    throw(Components::CCMException,
          CORBA::SystemException)
{
    return new Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl();
}

char*
Bank::OpenAccountCompComposition::CCM_OpenAccountCompHome_impl::get_storage_home_id()
{
    return 0;
}


CORBA::Boolean
Bank::OpenAccountCompComposition::CCM_OpenAccountComp_impl::connect_database()
    throw(CORBA::SystemException)
{
	// TODO: Implementation
	CORBA::Boolean _r = false;
	
//modified by xiao heping 2004/07/20		
//	string conninfo = "";
//	conninfo += "hostaddr = ";
//	conninfo += "172.26.13.88";
//	
//	conninfo += " dbname = \'";
//	conninfo += "bank";
//	conninfo += "\'";
//	
//	conninfo += " user = \'";
//	conninfo += "ccm";
//	conninfo += "\'";
//	
//	conninfo += " password = \'";
//	conninfo += "ccm613";
//	conninfo += "\'";

	string str = HelpFun::GetCCMProfileString("Bank","Bank_Database_Host","","starccm.properties");
	string conninfo = "";
	conninfo += "hostaddr = ";
	conninfo += str;
	
	str = HelpFun::GetCCMProfileString("Bank","Bank_Database_Name","","starccm.properties");	
	conninfo += " dbname = \'";
	conninfo += str;
	conninfo += "\'";
	
	str = HelpFun::GetCCMProfileString("Bank","Bank_Database_User","","starccm.properties");	
	conninfo += " user = \'";
	conninfo += str;
	conninfo += "\'";
	
	str = HelpFun::GetCCMProfileString("Bank","Bank_Database_Password","","starccm.properties");
	conninfo += " password = \'";
	conninfo += str;
	conninfo += "\'";
//end modify 
	
	PGconn * conn = PQconnectdb( conninfo.c_str() );
	
	if (PQstatus(conn) == CONNECTION_BAD)
	{
		PQfinish(conn);
		throw CORBA::PERSIST_STORE();
	}

	
	database_ = conn;    
	_r = true;
		
	return _r;
}

