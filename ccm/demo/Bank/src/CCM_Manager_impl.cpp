// **********************************************************************
//
// Generated by the CIDL Translator
//
// Copyright (c) 2001-2004
// StarMiddleware Group
// www.StarMiddleware.net
//
// All Rights Reserved
//
// Author: Huang Jie        huangjie@email.com
// Author: Chang Junsheng   cjs7908@163.com
// Author: Zhen Xianrong
//
// **********************************************************************

#include <CORBA.h>
#include <CCM_Manager_impl.h>

#ifdef HAVE_STD_IOSTREAM
using namespace std;
#endif

Bank::ManagerComposition::CCM_Manager_impl::CCM_Manager_impl()
{
}

Bank::ManagerComposition::CCM_Manager_impl::~CCM_Manager_impl()
{
}

void
Bank::ManagerComposition::CCM_Manager_impl::configuration_complete()
	throw (Components::InvalidConfiguration, CORBA::SystemException)
{
}

void
Bank::ManagerComposition::CCM_Manager_impl::enter_dyn_deploy()
	throw(CORBA::SystemException)
{
}

void
Bank::ManagerComposition::CCM_Manager_impl::leave_dyn_deploy()
	throw(CORBA::SystemException)
{
}

void
Bank::ManagerComposition::CCM_Manager_impl::set_session_context(Components::SessionContext* ctx)
    throw(Components::CCMException,
          CORBA::SystemException)
{
    #ifdef TAO
    ctx_ = Bank::CCM_Manager_Context::_duplicate(dynamic_cast<Bank::CCM_Manager_Context*>(ctx));
    #else
    ctx_ = Bank::CCM_Manager_Context::_narrow(ctx);
    #endif
}

void
Bank::ManagerComposition::CCM_Manager_impl::ccm_activate()
    throw(Components::CCMException,
          CORBA::SystemException)
{
}

void
Bank::ManagerComposition::CCM_Manager_impl::ccm_passivate()
    throw(Components::CCMException,
          CORBA::SystemException)
{
}

void
Bank::ManagerComposition::CCM_Manager_impl::ccm_remove()
    throw(Components::CCMException,
          CORBA::SystemException)
{
}


CORBA::ULong
Bank::ManagerComposition::CCM_Manager_impl::getBalance(const char* id)
    throw(CORBA::SystemException)
{
    CORBA::ULong _r = 0;
    Bank::QueryOp_var q = ctx_ -> get_connection_query();
    _r = q -> getBalance(id);
    return _r;
}

void
Bank::ManagerComposition::CCM_Manager_impl::deposit(const char* id,
                                                    CORBA::ULong amount)
    throw(CORBA::SystemException)
{
    Bank::DepositOp_var d = ctx_ -> get_connection_deposit();
    d -> deposit(id, amount);
}

CORBA::ULong
Bank::ManagerComposition::CCM_Manager_impl::withdraw(const char* id,
                                                     CORBA::ULong amount)
    throw(CORBA::SystemException)
{
    CORBA::ULong _r = 0;
    Bank::WithdrawOp_var w = ctx_ -> get_connection_withdraw();
    _r = w -> withdraw(id, amount);
    return _r;
}

void
Bank::ManagerComposition::CCM_Manager_impl::transfer(const char* fromId,
                                                     const char* toId,
                                                     CORBA::ULong amount)
    throw(CORBA::SystemException)
{
    Bank::WithdrawOp_var w = ctx_ -> get_connection_withdraw();
    Bank::DepositOp_var d = ctx_ -> get_connection_deposit();
    
    w -> withdraw(fromId, amount);
    d -> deposit(toId, amount);
}

void
Bank::ManagerComposition::CCM_Manager_impl::changePassword(const char* id,
                                                           const char* newPassword)
    throw(CORBA::SystemException)
{
    Bank::AuthenticationOp_var a = ctx_ -> get_connection_authenticator();
    a -> changePassword(id, newPassword);
}

void
Bank::ManagerComposition::CCM_Manager_impl::createAccount(const char* id,
                                                          const char* password)
    throw(CORBA::SystemException)
{
    Bank::OpenAccountOp_var o = ctx_ -> get_connection_openAccount();
    o -> openAccount(id, password);
}

void
Bank::ManagerComposition::CCM_Manager_impl::deleteAccount(const char* id)
    throw(CORBA::SystemException)
{
    Bank::DelAccountOp_var d = ctx_ -> get_connection_delAccount();
    d -> DelAccount(id);
}

Bank::ManagerComposition::CCM_ManagerHome_impl::CCM_ManagerHome_impl()
{
}

Bank::ManagerComposition::CCM_ManagerHome_impl::~CCM_ManagerHome_impl()
{
}

Components::EnterpriseComponent_ptr
Bank::ManagerComposition::CCM_ManagerHome_impl::create()
    throw(Components::CCMException,
          CORBA::SystemException)
{
    return new Bank::ManagerComposition::CCM_Manager_impl();
}

char*
Bank::ManagerComposition::CCM_ManagerHome_impl::get_storage_home_id()
{
    return 0;
}

