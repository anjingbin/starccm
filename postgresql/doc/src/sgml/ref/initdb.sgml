<!--
$Header: /home/hjcvs/OB-CCM-1.0/postgresql/doc/src/sgml/ref/initdb.sgml,v 1.1 2003/12/30 00:05:08 AnJingBin Exp $
PostgreSQL documentation
-->

<refentry id="APP-INITDB">
 <docinfo>
  <date>2000-12-25</date>
 </docinfo>

 <refmeta>
  <refentrytitle id="APP-INITDB-TITLE">initdb</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>initdb</refname>
  <refpurpose>create a new <productname>PostgreSQL</productname> database cluster</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>initdb</command>
    <group choice="plain">
     <arg>--pgdata </arg>
     <arg>-D </arg>
     <replaceable>directory</replaceable>
    </group>
    <group>
     <arg>--username </arg>
     <arg>-U </arg>
     <replaceable>username</replaceable>
    </group>
    <group><arg>--pwprompt</arg><arg>-W</arg></group>
    <group>
     <arg>--encoding </arg>
     <arg>-E </arg>
     <replaceable>encoding</replaceable>
    </group>
    <arg>-L <replaceable>directory</replaceable></arg>
    <group><arg>--noclean</arg><arg>-n</arg></group>
    <group><arg>--debug</arg><arg>-d</arg></group>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="R1-APP-INITDB-1">
  <title>
   Description
  </title>
  <para>
   <command>initdb</command> creates a new
   <productname>PostgreSQL</productname> database cluster (or database
   system).  A database cluster is a collection of databases that are
   managed by a single server instance.
  </para>

  <para>
   Creating a database system consists of creating the directories in which
   the database data will live, generating the shared catalog tables 
   (tables that belong to the whole cluster rather than to any particular
   database), and creating the <literal>template1</literal>
   database.  When you create a new database, everything in the
   <literal>template1</literal> database is copied.
   It contains catalog tables filled in for things like the
   built-in types.
  </para>

  <para>
   <command>initdb</command> must be run as the user that will own the
   server process, because the server needs to have access to the
   files and directories that <command>initdb</command> creates.
   Since the server may not be run as root, you must not run
   <command>initdb</command> as root either.  (It will in fact refuse
   to do so.)
  </para>

  <para>
   Although <command>initdb</command> will attempt to create the
   specified data directory, often it won't have permission to do so,
   since the parent of the desired data directory is often a root-owned
   directory.  To set up an arrangement like this, create an empty data
   directory as root, then use <command>chown</command> to hand over
   ownership of that directory to the database user account, then
   <command>su</command> to become the database user, and
   finally run <command>initdb</command> as the database user.
  </para>

  <refsect2>
   <title>Options</title>

   <para>
    <variablelist>
     <varlistentry>
      <term>--pgdata=<replaceable class="parameter">directory</replaceable></term>
      <term>-D <replaceable class="parameter">directory</replaceable></term>
      <listitem>
       <para>
        This option specifies the directory where the database system
        should be stored. This is the only information required by
        <command>initdb</command>, but you can avoid writing it by
        setting the <envar>PGDATA</envar> environment variable, which
        can be convenient since the database server
        (<command>postmaster</command>) can find the database
        directory later by the same variable.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>--username=<replaceable class="parameter">username</replaceable></term>
      <term>-U <replaceable class="parameter">username</replaceable></term>
      <listitem>
       <para>
        Selects the user name of the database superuser. This defaults
        to the name of the effective user running
        <command>initdb</command>. It is really not important what the
        superuser's name is, but one might choose to keep the
        customary name <quote>postgres</quote>, even if the operating
        system user's name is different.
       </para>
      </listitem>
     </varlistentry>
 
     <varlistentry>
      <term>--pwprompt</term>
      <term>-W</term>
      <listitem>
       <para>
        Makes <command>initdb</command> prompt for a password
        to give the database superuser. If you don't plan on using password
        authentication, this is not important.  Otherwise you won't be
        able to use password authentication until you have a password
        set up.
       </para>
      </listitem>
     </varlistentry>
 
     <varlistentry>
      <term>--encoding=<replaceable class="parameter">encoding</replaceable></term>
      <term>-E <replaceable class="parameter">encoding</replaceable></term>
      <listitem>
       <para>
        Selects the encoding of the template database. This will also
        be the default encoding of any database you create later, unless you
        override it there. To use the encoding feature, you must
        have enabled it at build time, at which time you also select the default
        for this option.
       </para>
      </listitem>
     </varlistentry>

   </variablelist>
   </para>

   <para>
    Other, less commonly used, parameters are also available:

    <variablelist>
     <varlistentry>
      <term>-L <replaceable class="parameter">directory</replaceable></term>
      <listitem>
       <para>
        Specifies where <command>initdb</command> should find
        its input files to initialize the database system.  This is
        normally not necessary.  You will be told if you need to
        specify their location explicitly.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>--noclean</term>
      <term>-n</term>
      <listitem>
       <para>
	By default, when <command>initdb</command>
	determines that an error prevented it from completely creating the database
	system, it removes any files it may have created before discovering
	that it can't finish the job. This option inhibits tidying-up and is
	thus useful for debugging.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>--debug</term>
      <term>-d</term>
      <listitem>
       <para>
	Print debugging output from the bootstrap backend and a few other
        messages of lesser interest for the general public.
	The bootstrap backend is the program <command>initdb</command>
	uses to create the catalog tables.  This option generates a tremendous
	amount of extremely boring output.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>

  </refsect2>
 </refsect1>

 <refsect1>
  <title>Environment</title>

  <variablelist>
   <varlistentry>
    <term><envar>PGDATA</envar></term>

    <listitem>
     <para>
      Specifies the directory where the database system is to be
      stored; may be overridden using the <option>-D</option> option.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>See Also</title>

  <simplelist type="inline">
   <member><xref linkend="app-postgres"></member>
   <member><xref linkend="app-postmaster"></member>
   <member><citetitle>PostgreSQL Administrator's Guide</citetitle></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
