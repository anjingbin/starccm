<!--
$Header: /home/hjcvs/OB-CCM-1.0/postgresql/doc/src/sgml/ref/create_database.sgml,v 1.2 2004/07/05 08:55:12 SuLiang Exp $
PostgreSQL documentation
-->

<refentry id="SQL-CREATEDATABASE">
 <refmeta>
  <refentrytitle id="sql-createdatabase-title">
   CREATE DATABASE
  </refentrytitle>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
 <refnamediv>
  <refname>
   CREATE DATABASE
  </refname>
  <refpurpose>
   create a new database
  </refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <refsynopsisdivinfo>
   <date>1999-12-11</date>
  </refsynopsisdivinfo>
  <synopsis>
CREATE DATABASE <replaceable class="PARAMETER">name</replaceable>
    [ WITH [ LOCATION = '<replaceable class="parameter">dbpath</replaceable>' ]
           [ TEMPLATE = <replaceable class="parameter">template</replaceable> ]
           [ ENCODING = <replaceable class="parameter">encoding</replaceable> ] ]
  </synopsis>

  <refsect2 id="R2-SQL-CREATEDATABASE-1">
   <refsect2info>
    <date>1999-12-11</date>
   </refsect2info>
   <title>
    Inputs
   </title>
   <para>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
	The name of a database to create.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable class="parameter">dbpath</replaceable></term>
      <listitem>
       <para>
	An alternate file-system location in which to store the new database,
	specified as a string literal;
	or <literal>DEFAULT</literal> to use the default location.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable class="parameter">template</replaceable></term>
      <listitem>
       <para>
        Name of template from which to create the new database,
	or <literal>DEFAULT</literal> to use the default template
	(<literal>template1</literal>).
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable class="parameter">encoding</replaceable></term>
      <listitem>
       <para>
        Multibyte encoding method to use in the new database.  Specify
	a string literal name (e.g., <literal>'SQL_ASCII'</literal>),
	or an integer encoding number, or <literal>DEFAULT</literal>
	to use the default encoding.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </refsect2>

  <refsect2 id="R2-SQL-CREATEDATABASE-2">
   <refsect2info>
    <date>1999-12-11</date>
   </refsect2info>
   <title>
    Outputs
   </title>
   <para>

    <variablelist>
     <varlistentry>
      <term><computeroutput>CREATE DATABASE</computeroutput></term>
      <listitem>
       <para>
	Message returned if the command completes successfully.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><computeroutput>ERROR:  user '<replaceable class="parameter">username</replaceable>' is not allowed to create/drop databases</computeroutput></term>
      <listitem>
       <para>
        You must have the special CREATEDB privilege to create databases.
        See <xref linkend="SQL-CREATEUSER" endterm="SQL-CREATEUSER-title">.
       </para>
      </listitem>
     </varlistentry>


     <varlistentry>
      <term><computeroutput>ERROR:  createdb: database "<replaceable class="parameter">name</replaceable>" already exists</computeroutput></term>
      <listitem>
       <para>
	This occurs if a database with the <replaceable class="parameter">name</replaceable>
        specified already exists.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><computeroutput>ERROR:  database path may not contain single quotes</computeroutput></term>
      <listitem>
       <para>
	The database location
        <replaceable class="parameter">dbpath</replaceable> cannot contain
        single quotes. This is required so that the shell commands that
        create the database directory can execute safely.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><computeroutput>ERROR:  CREATE DATABASE: may not be called in a transaction block</computeroutput></term>
      <listitem>
       <para>
        If you have an explicit transaction block in progress you cannot call
        <command>CREATE DATABASE</command>. You must finish the transaction first.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><computeroutput>ERROR:  Unable to create database directory '<replaceable>path</replaceable>'.</computeroutput></term>
      <term><computeroutput>ERROR:  Could not initialize database directory.</computeroutput></term>
      <listitem>
       <para>
        These are most likely related to insufficient permissions on the data
        directory, a full disk, or other file system problems. The user under
        which the database server is running must have access to the location.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
  </refsect2>
 </refsynopsisdiv>

 <refsect1 id="R1-SQL-CREATEDATABASE-1">
  <refsect1info>
   <date>1999-12-11</date>
  </refsect1info>
  <title>
   Description
  </title>
  <para>
   <command>CREATE DATABASE</command> creates a new
   <productname>PostgreSQL</productname> database.
   The creator becomes the owner of the new database.
  </para>

  <para>
   An alternate location can be specified in order to,
   for example, store the database on a different disk.
   The path must have been prepared with the 
   <xref linkend="APP-INITLOCATION" endterm="APP-INITLOCATION-title">
   command.
  </para>
  <para>
   If the path name does not contain a slash, it is interpreted
   as an environment variable name, which must be known to the
   server process. This way the database administrator can
   exercise control over locations in which databases can be created.
   (A customary choice is, e.g., <envar>PGDATA2</envar>.)
   If the server is compiled with <literal>ALLOW_ABSOLUTE_DBPATHS</literal>
   (not so by default), absolute path names, as identified by
   a leading slash
   (e.g., <filename>/usr/local/pgsql/data</filename>),
   are allowed as well.
  </para>

  <para>
   By default, the new database will be created by cloning the standard
   system database <literal>template1</>.  A different template can be
   specified by writing <literal>TEMPLATE =</>
   <replaceable class="parameter">name</replaceable>.  In particular,
   by writing <literal>TEMPLATE = template0</>, you can create a virgin
   database containing only the standard objects predefined by your
   version of <application>PostgreSQL</application>.  This is useful
   if you wish to avoid copying
   any installation-local objects that may have been added to
   <literal>template1</>. 
  </para>

  <para>
   The optional encoding parameter allows selection of the database encoding,
   if your server was compiled with multibyte encoding support.  When not
   specified, it defaults to the encoding used by the selected template
   database.
  </para>

  <para>
   Optional parameters can be written in any order, not only the order
   illustrated above.
  </para>

  <refsect2 id="R2-SQL-CREATEDATABASE-3">
   <refsect2info>
    <date>1999-12-11</date>
   </refsect2info>
   <title>
    Notes
   </title>
   <para>
    <command>CREATE DATABASE</command> is a <productname>PostgreSQL</productname>
    language extension.
   </para>
   <para>
    Use <xref linkend="SQL-DROPDATABASE" endterm="SQL-DROPDATABASE-title"> to remove a database.
   </para>
   <para>
    The program <xref linkend="APP-CREATEDB" endterm="APP-CREATEDB-title"> is a
    shell script wrapper around this command, provided for convenience.
   </para>

   <para>
    There are security and data integrity issues
    involved with using alternate database locations
    specified with absolute path names, and by default
    only an environment variable known to the backend may be
    specified for an alternate location.
    See the Administrator's Guide for more information.
   </para>

<!--
comment from Olly; response from Thomas...
  <comment>
   initlocation does not create a PG_VERSION file in the specified location.
   How will PostgreSQL handle the situation if it is upgraded to an 
   incompatible database version?
  </comment>
   Hmm. This isn't an issue since the upgrade would do
   a dump/reload from the main database area also.
   Not sure if the dump/reload would guarantee that
   the alternate data area gets refreshed though...
-->

  <para>
   Although it is possible to copy a database other than <literal>template1</>
   by specifying its name as the template, this is not (yet) intended as
   a general-purpose COPY DATABASE facility.
   We recommend that databases used as templates be treated as read-only.
   See the <citetitle>Administrator's Guide</> for more information.
  </para>
  </refsect2>
 </refsect1>

 <refsect1 id="R1-SQL-CREATEDATABASE-2">
  <title>
   Usage
  </title>
  <para>
   To create a new database:

   <programlisting>
<prompt>olly=></prompt> <userinput>create database lusiadas;</userinput>
   </programlisting>
  </para>

  <para>
   To create a new database in an alternate area <filename>~/private_db</filename>:

   <programlisting>
<prompt>$</prompt> <userinput>mkdir private_db</userinput>
<prompt>$</prompt> <userinput>initlocation ~/private_db</userinput>
    <computeroutput>
The location will be initialized with username "olly".
This user will own all the files and must also own the server process.
Creating directory /home/olly/private_db
Creating directory /home/olly/private_db/base

initlocation is complete.
    </computeroutput>
   
<prompt>$</prompt> <userinput>psql olly</userinput>
<computeroutput>
Welcome to psql, the PostgreSQL interactive terminal.
 
Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help on internal slash commands
       \g or terminate with semicolon to execute query
       \q to quit

<prompt>olly=></prompt></computeroutput> <userinput>CREATE DATABASE elsewhere WITH LOCATION = '/home/olly/private_db';</userinput>
<computeroutput>CREATE DATABASE</computeroutput>
   </programlisting>
  </para>
 </refsect1>

 <refsect1 id="R1-SQL-CREATEDATABASE-4">
  <title>
   Compatibility
  </title>

  <refsect2 id="R2-SQL-CREATEDATABASE-4">
   <refsect2info>
    <date>1998-04-15</date>
   </refsect2info>
   <title>
    SQL92
   </title>
   <para>
    There is no <command>CREATE DATABASE</command> statement in SQL92.
    Databases are equivalent to catalogs whose creation is implementation-defined.
   </para>
  </refsect2>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
