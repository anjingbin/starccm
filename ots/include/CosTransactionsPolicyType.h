// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2001
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.1.0

#ifndef ___CosTransactionsPolicyType_h__
#define ___CosTransactionsPolicyType_h__

#include <OB/Policy.h>

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4010000L)
#       error ORBacus version mismatch!
#   endif
#endif

namespace CosTransactions
{

} // End of namespace CosTransactions

namespace CosTransactions
{

} // End of namespace CosTransactions

namespace OBStubImpl_CosTransactions
{

} // End of namespace OBStubImpl_CosTransactions

namespace OBStubImpl_CosTransactions
{

} // End of namespace OBStubImpl_CosTransactions

//
// IDL:CosTransactions:1.0
//
namespace CosTransactions
{

//
// IDL:CosTransactions/InvocationPolicyValue:1.0
//
typedef CORBA::UShort InvocationPolicyValue;
typedef CORBA::UShort_out InvocationPolicyValue_out;
extern OB::TypeCodeConst _tc_InvocationPolicyValue;

//
// IDL:CosTransactions/EITHER:1.0
//
const InvocationPolicyValue EITHER = 0;

//
// IDL:CosTransactions/SHARED:1.0
//
const InvocationPolicyValue SHARED = 1;

//
// IDL:CosTransactions/UNSHARED:1.0
//
const InvocationPolicyValue UNSHARED = 2;

//
// IDL:CosTransactions/OTSPolicyValue:1.0
//
typedef CORBA::UShort OTSPolicyValue;
typedef CORBA::UShort_out OTSPolicyValue_out;
extern OB::TypeCodeConst _tc_OTSPolicyValue;

//
// IDL:CosTransactions/REQUIRES:1.0
//
const OTSPolicyValue REQUIRES = 1;

//
// IDL:CosTransactions/FORBIDS:1.0
//
const OTSPolicyValue FORBIDS = 2;

//
// IDL:CosTransactions/ADAPTS:1.0
//
const OTSPolicyValue ADAPTS = 3;

//
// IDL:CosTransactions/INTERNAL:1.0
//
const OTSPolicyValue INTERNAL = 4;

//
// IDL:CosTransactions/NonTxTargetPolicyValue:1.0
//
typedef CORBA::UShort NonTxTargetPolicyValue;
typedef CORBA::UShort_out NonTxTargetPolicyValue_out;
extern OB::TypeCodeConst _tc_NonTxTargetPolicyValue;

//
// IDL:CosTransactions/PREVENT:1.0
//
const NonTxTargetPolicyValue PREVENT = 0;

//
// IDL:CosTransactions/PERMIT:1.0
//
const NonTxTargetPolicyValue PERMIT = 1;

//
// IDL:CosTransactions/INVOCATION_POLICY_TYPE:1.0
//
const ::CORBA::PolicyType INVOCATION_POLICY_TYPE = 55U;

//
// IDL:CosTransactions/OTS_POLICY_TYPE:1.0
//
const ::CORBA::PolicyType OTS_POLICY_TYPE = 56U;

//
// IDL:CosTransactions/NON_TX_TARGET_POLICY_TYPE:1.0
//
const ::CORBA::PolicyType NON_TX_TARGET_POLICY_TYPE = 57U;

} // End of namespace CosTransactions

//
// IDL:CosTransactions:1.0
//
namespace OBProxy_CosTransactions
{

} // End of namespace OBProxy_CosTransactions

//
// IDL:CosTransactions:1.0
//
namespace OBStubImpl_CosTransactions
{

} // End of namespace OBStubImpl_CosTransactions

//
// IDL:CosTransactions:1.0
//
namespace OBMarshalStubImpl_CosTransactions
{

} // End of namespace OBMarshalStubImpl_CosTransactions

//
// IDL:CosTransactions:1.0
//
namespace OBV_CosTransactions
{

} // End of namespace OBV_CosTransactions

#endif
