// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2001
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.1.0

#ifndef ___Account_skel_h__
#define ___Account_skel_h__

#include <Account.h>

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4010000L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:implicit/Account:1.0
//
class POA_Account : virtual public PortableServer::ServantBase
{
    POA_Account(const POA_Account&);
    void operator=(const POA_Account&);

protected:

    //
    // IDL:implicit/Account/connect:1.0
    //
    void _OB_op_connect(OB::Upcall_ptr);

    //
    // IDL:implicit/Account/close:1.0
    //
    void _OB_op_close(OB::Upcall_ptr);

    //
    // IDL:implicit/Account/sum:1.0
    //
    void _OB_op_sum(OB::Upcall_ptr);

    //
    // IDL:implicit/Account/deposit:1.0
    //
    void _OB_op_deposit(OB::Upcall_ptr);

    //
    // IDL:implicit/Account/withdraw:1.0
    //
    void _OB_op_withdraw(OB::Upcall_ptr);

public:

    POA_Account() { }

    virtual CORBA::Boolean _is_a(const char*)
        throw(CORBA::SystemException);

    virtual CORBA::RepositoryId _primary_interface(const PortableServer::ObjectId&,
                                                   PortableServer::POA_ptr);

    Account_ptr _this();

    virtual OB::DirectStubImpl_ptr _OB_createDirectStubImpl(PortableServer::POA_ptr,
                                                            const PortableServer::ObjectId&);
    virtual void _OB_dispatch(OB::Upcall_ptr);

    //
    // IDL:implicit/Account/connect:1.0
    //
    virtual void connect()
        throw(CORBA::SystemException) = 0;

    //
    // IDL:implicit/Account/close:1.0
    //
    virtual void close()
        throw(CORBA::SystemException) = 0;

    //
    // IDL:implicit/Account/sum:1.0
    //
    virtual void sum()
        throw(CORBA::SystemException) = 0;

    //
    // IDL:implicit/Account/deposit:1.0
    //
    virtual void deposit()
        throw(CORBA::SystemException) = 0;

    //
    // IDL:implicit/Account/withdraw:1.0
    //
    virtual void withdraw()
        throw(CORBA::SystemException) = 0;
};

//
// IDL:implicit/Account:1.0
//
class OBDirectStubImpl_Account : virtual public OBStubImpl_Account,
                                 virtual public OB::DirectStubImpl
{
    OBDirectStubImpl_Account(const OBDirectStubImpl_Account&);
    void operator=(const OBDirectStubImpl_Account&);

protected:

#ifdef HAVE_VCPLUSPLUS_BUGS

    OBDirectStubImpl_Account() { }

#endif

    OBDirectStubImpl_Account(PortableServer::POA_ptr,
                             const PortableServer::ObjectId&,
                             PortableServer::ServantBase*);

    friend class POA_Account;

public:

    //
    // IDL:implicit/Account/connect:1.0
    //
    virtual void connect();

    //
    // IDL:implicit/Account/close:1.0
    //
    virtual void close();

    //
    // IDL:implicit/Account/sum:1.0
    //
    virtual void sum();

    //
    // IDL:implicit/Account/deposit:1.0
    //
    virtual void deposit();

    //
    // IDL:implicit/Account/withdraw:1.0
    //
    virtual void withdraw();
};

#endif
