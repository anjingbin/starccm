// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2001
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.1.0

#include <OB/CORBAServer.h>
#include <Account_skel.h>

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4010000L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:implicit/Account/connect:1.0
//
void
POA_Account::_OB_op_connect(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    connect();
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:implicit/Account/close:1.0
//
void
POA_Account::_OB_op_close(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    close();
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:implicit/Account/sum:1.0
//
void
POA_Account::_OB_op_sum(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    sum();
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:implicit/Account/deposit:1.0
//
void
POA_Account::_OB_op_deposit(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    deposit();
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:implicit/Account/withdraw:1.0
//
void
POA_Account::_OB_op_withdraw(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    withdraw();
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:implicit/Account:1.0
//
CORBA::Boolean
POA_Account::_is_a(const char* type)
    throw(CORBA::SystemException)
{
    const char** _ob_ids = Account::_OB_staticIds();
    for(CORBA::ULong _ob_i = 0 ; _ob_ids[_ob_i] != 0 ; _ob_i++)
        if(strcmp(type, _ob_ids[_ob_i]) == 0)
            return true;

    return false;
}

CORBA::RepositoryId
POA_Account::_primary_interface(const PortableServer::ObjectId&,
                                PortableServer::POA_ptr)
{
    return CORBA::string_dup(Account::_OB_staticIds()[0]);
}

Account_ptr
POA_Account::_this()
{
    CORBA::Object_var obj = _OB_createReference();
    Account_var result = Account::_narrow(obj);
    return result._retn();
}

OB::DirectStubImpl_ptr
POA_Account::_OB_createDirectStubImpl(PortableServer::POA_ptr poa,
                                      const PortableServer::ObjectId& oid)
{
    return new OBDirectStubImpl_Account(poa, oid, this);
}

void
POA_Account::_OB_dispatch(OB::Upcall_ptr _ob_up)
{
    static const char* _ob_names[] =
    {
        "close",
        "connect",
        "deposit",
        "sum",
        "withdraw"
    };
    static const CORBA::ULong _ob_numNames = 5;

    switch(_OB_findOperation(_ob_up, _ob_names, _ob_numNames))
    {
    case 0: // close
        _OB_op_close(_ob_up);
        return;

    case 1: // connect
        _OB_op_connect(_ob_up);
        return;

    case 2: // deposit
        _OB_op_deposit(_ob_up);
        return;

    case 3: // sum
        _OB_op_sum(_ob_up);
        return;

    case 4: // withdraw
        _OB_op_withdraw(_ob_up);
        return;
    }

    _OB_dispatchBase(_ob_up);
}

//
// IDL:implicit/Account:1.0
//
OBDirectStubImpl_Account::OBDirectStubImpl_Account(PortableServer::POA_ptr poa,
                                                   const PortableServer::ObjectId& oid,
                                                   PortableServer::ServantBase* servant)
#ifdef HAVE_VCPLUSPLUS_BUGS
{
    _ob_initialize(poa, oid, servant);
}
#else
    : OB::DirectStubImpl(poa, oid, servant)
{
}
#endif

//
// IDL:implicit/Account/connect:1.0
//
void
OBDirectStubImpl_Account::connect()
{
    OB::InvocationHandler _ob_handler(this, "connect");
    dynamic_cast<POA_Account*>(_ob_servant_) -> connect();
}

//
// IDL:implicit/Account/close:1.0
//
void
OBDirectStubImpl_Account::close()
{
    OB::InvocationHandler _ob_handler(this, "close");
    dynamic_cast<POA_Account*>(_ob_servant_) -> close();
}

//
// IDL:implicit/Account/sum:1.0
//
void
OBDirectStubImpl_Account::sum()
{
    OB::InvocationHandler _ob_handler(this, "sum");
    dynamic_cast<POA_Account*>(_ob_servant_) -> sum();
}

//
// IDL:implicit/Account/deposit:1.0
//
void
OBDirectStubImpl_Account::deposit()
{
    OB::InvocationHandler _ob_handler(this, "deposit");
    dynamic_cast<POA_Account*>(_ob_servant_) -> deposit();
}

//
// IDL:implicit/Account/withdraw:1.0
//
void
OBDirectStubImpl_Account::withdraw()
{
    OB::InvocationHandler _ob_handler(this, "withdraw");
    dynamic_cast<POA_Account*>(_ob_servant_) -> withdraw();
}
