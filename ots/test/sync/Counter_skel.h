// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2001
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.1.0

#ifndef ___Counter_skel_h__
#define ___Counter_skel_h__

#include <Counter.h>

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4010000L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:Counter:1.0
//
class POA_Counter : virtual public PortableServer::ServantBase
{
    POA_Counter(const POA_Counter&);
    void operator=(const POA_Counter&);

protected:

    //
    // IDL:Counter/count:1.0
    //
    void _OB_get_count(OB::Upcall_ptr);

    //
    // IDL:Counter/increment:1.0
    //
    void _OB_op_increment(OB::Upcall_ptr);

    //
    // IDL:Counter/decrement:1.0
    //
    void _OB_op_decrement(OB::Upcall_ptr);

public:

    POA_Counter() { }

    virtual CORBA::Boolean _is_a(const char*)
        throw(CORBA::SystemException);

    virtual CORBA::RepositoryId _primary_interface(const PortableServer::ObjectId&,
                                                   PortableServer::POA_ptr);

    Counter_ptr _this();

    virtual OB::DirectStubImpl_ptr _OB_createDirectStubImpl(PortableServer::POA_ptr,
                                                            const PortableServer::ObjectId&);
    virtual void _OB_dispatch(OB::Upcall_ptr);

    //
    // IDL:Counter/count:1.0
    //
    virtual CORBA::Long count()
        throw(CORBA::SystemException) = 0;

    //
    // IDL:Counter/increment:1.0
    //
    virtual void increment()
        throw(CORBA::SystemException) = 0;

    //
    // IDL:Counter/decrement:1.0
    //
    virtual void decrement()
        throw(CORBA::SystemException) = 0;
};

//
// IDL:Counter:1.0
//
class OBDirectStubImpl_Counter : virtual public OBStubImpl_Counter,
                                 virtual public OB::DirectStubImpl
{
    OBDirectStubImpl_Counter(const OBDirectStubImpl_Counter&);
    void operator=(const OBDirectStubImpl_Counter&);

protected:

#ifdef HAVE_VCPLUSPLUS_BUGS

    OBDirectStubImpl_Counter() { }

#endif

    OBDirectStubImpl_Counter(PortableServer::POA_ptr,
                             const PortableServer::ObjectId&,
                             PortableServer::ServantBase*);

    friend class POA_Counter;

public:

    //
    // IDL:Counter/count:1.0
    //
    virtual CORBA::Long count();

    //
    // IDL:Counter/increment:1.0
    //
    virtual void increment();

    //
    // IDL:Counter/decrement:1.0
    //
    virtual void decrement();
};

#endif
