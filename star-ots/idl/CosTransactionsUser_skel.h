// *************************************************************************
//
// This File Is Automatically Generated by the StarBusIDL-to-C++ Compiler !
//
// Copyright (c) 2003
// Network Information Security Institute,Computer College,NUDT.
// ChangSha,Hunan,PRC
//
// All Rights Reserved
//
// *************************************************************************

// Version: 5.0.0

#ifndef ___CosTransactionsUser_skel_h__
#define ___CosTransactionsUser_skel_h__

#include <CosTransactionsUser.h>
#include <STAR/SkelForServerRequest.h>

#include <CosTransactionsOTS_skel.h>

//
// Module declare ::CosTransactions
//
namespace POA_CosTransactions
{

//
// Interface declare ::CosTransactions::Synchronization
//
class Synchronization : virtual public POA_CosTransactions::TransactionalObject
{
    Synchronization(const Synchronization&);
    void operator=(const Synchronization&);

protected:

    //
    // ProtectedOperation declare before_completion
    //
    static void _STAR_op_before_completion(PortableServer::ServantBase *,STAR::Upcall_ptr);

    //
    // ProtectedOperation declare after_completion
    //
    static void _STAR_op_after_completion(PortableServer::ServantBase *,STAR::Upcall_ptr);

public:

    Synchronization() { }

    virtual CORBA::Boolean _is_a(const char*)
        throw(CORBA::SystemException);

    virtual CORBA::RepositoryId _primary_interface(const PortableServer::ObjectId&,
                                                   PortableServer::POA_ptr);

    CosTransactions::Synchronization_ptr _this();

    virtual void _STAR_dispatch(STAR::Upcall_ptr);

    //
    // Operation declare before_completion
    //
    virtual void before_completion()
        throw(CORBA::SystemException) = 0;

    //
    // Operation declare after_completion
    //
    virtual void after_completion(CosTransactions::Status s)
        throw(CORBA::SystemException) = 0;
};

} // End of namespace POA_CosTransactions

#endif
